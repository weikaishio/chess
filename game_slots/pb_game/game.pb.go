// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game.proto

/*
Package pb_game is a generated protocol buffer package.

It is generated from these files:
	game.proto

It has these top-level messages:
	Kvobject
	MsgHeader
	ErlangHandler
	Platinfo
	ServerVersionS2C
	UserLoginC2S
	UserLoginSuccessS2C
	UserLoginFailedS2C
	UserAuthC2S
	UserAuthSuccessS2C
	UserAuthFailedS2C
	Replace
	Symbol
	Line
	Coordinate
	Rewardinfo
	Eventinfo
	Rewardstruct
	UserThemeSpinC2S
	UserThemeSpinSuccessS2C
	UserThemeSpinFailedS2C
	UserThemeSpinOptimizeC2S
	UserThemeSpinOptimizeSuccessS2C
	UserThemeSpinOptimizeFailedS2C
*/
package pb_game

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgHeader_MSG_ID int32

const (
	// ///////////////////////////////////////////////////////////////////////////////////////////////////////////
	// //        游戏消息:msg_后为消息结构名,=号右边为消息id.
	// //        c2s为client->server      s2c为server->client
	// ///////////////////////////////////////////////////////////////////////////////////////////////////////////
	MsgHeader_server_version_s2c MsgHeader_MSG_ID = 2
	// //////////////////////////////////////////////////////////////////////
	// //////////////////玩家登录部分                   ///////////////////////
	// //////////////////////////////////////////////////////////////////////
	MsgHeader_user_login_c2s         MsgHeader_MSG_ID = 4
	MsgHeader_user_login_success_s2c MsgHeader_MSG_ID = 5
	MsgHeader_user_login_failed_s2c  MsgHeader_MSG_ID = 6
	MsgHeader_user_auth_c2s          MsgHeader_MSG_ID = 7
	MsgHeader_user_auth_success_s2c  MsgHeader_MSG_ID = 8
	MsgHeader_user_auth_failed_s2c   MsgHeader_MSG_ID = 9
	// //////////////////////////////////////////////////////////////////////
	// //////////////////玩家关卡                   ///////////////////////
	// //////////////////////////////////////////////////////////////////////
	MsgHeader_user_enter_theme_c2s                   MsgHeader_MSG_ID = 31
	MsgHeader_user_enter_theme_success_s2c           MsgHeader_MSG_ID = 32
	MsgHeader_user_enter_theme_failed_s2c            MsgHeader_MSG_ID = 33
	MsgHeader_user_theme_spin_c2s                    MsgHeader_MSG_ID = 34
	MsgHeader_user_theme_spin_success_s2c            MsgHeader_MSG_ID = 35
	MsgHeader_user_theme_spin_failed_s2c             MsgHeader_MSG_ID = 36
	MsgHeader_user_theme_spin_optimize_c2s           MsgHeader_MSG_ID = 37
	MsgHeader_user_theme_spin_optimize_success_s2c   MsgHeader_MSG_ID = 38
	MsgHeader_user_theme_spin_optimize_failed_s2c    MsgHeader_MSG_ID = 39
	MsgHeader_user_theme_synchronize_c2s             MsgHeader_MSG_ID = 40
	MsgHeader_user_theme_synchronize_success_s2c     MsgHeader_MSG_ID = 41
	MsgHeader_user_theme_synchronize_failed_s2c      MsgHeader_MSG_ID = 42
	MsgHeader_user_theme_spin_compatible_c2s         MsgHeader_MSG_ID = 43
	MsgHeader_user_theme_spin_compatible_success_s2c MsgHeader_MSG_ID = 44
	MsgHeader_user_theme_spin_compatible_failed_s2c  MsgHeader_MSG_ID = 45
)

var MsgHeader_MSG_ID_name = map[int32]string{
	2:  "server_version_s2c",
	4:  "user_login_c2s",
	5:  "user_login_success_s2c",
	6:  "user_login_failed_s2c",
	7:  "user_auth_c2s",
	8:  "user_auth_success_s2c",
	9:  "user_auth_failed_s2c",
	31: "user_enter_theme_c2s",
	32: "user_enter_theme_success_s2c",
	33: "user_enter_theme_failed_s2c",
	34: "user_theme_spin_c2s",
	35: "user_theme_spin_success_s2c",
	36: "user_theme_spin_failed_s2c",
	37: "user_theme_spin_optimize_c2s",
	38: "user_theme_spin_optimize_success_s2c",
	39: "user_theme_spin_optimize_failed_s2c",
	40: "user_theme_synchronize_c2s",
	41: "user_theme_synchronize_success_s2c",
	42: "user_theme_synchronize_failed_s2c",
	43: "user_theme_spin_compatible_c2s",
	44: "user_theme_spin_compatible_success_s2c",
	45: "user_theme_spin_compatible_failed_s2c",
}
var MsgHeader_MSG_ID_value = map[string]int32{
	"server_version_s2c":                     2,
	"user_login_c2s":                         4,
	"user_login_success_s2c":                 5,
	"user_login_failed_s2c":                  6,
	"user_auth_c2s":                          7,
	"user_auth_success_s2c":                  8,
	"user_auth_failed_s2c":                   9,
	"user_enter_theme_c2s":                   31,
	"user_enter_theme_success_s2c":           32,
	"user_enter_theme_failed_s2c":            33,
	"user_theme_spin_c2s":                    34,
	"user_theme_spin_success_s2c":            35,
	"user_theme_spin_failed_s2c":             36,
	"user_theme_spin_optimize_c2s":           37,
	"user_theme_spin_optimize_success_s2c":   38,
	"user_theme_spin_optimize_failed_s2c":    39,
	"user_theme_synchronize_c2s":             40,
	"user_theme_synchronize_success_s2c":     41,
	"user_theme_synchronize_failed_s2c":      42,
	"user_theme_spin_compatible_c2s":         43,
	"user_theme_spin_compatible_success_s2c": 44,
	"user_theme_spin_compatible_failed_s2c":  45,
}

func (x MsgHeader_MSG_ID) Enum() *MsgHeader_MSG_ID {
	p := new(MsgHeader_MSG_ID)
	*p = x
	return p
}
func (x MsgHeader_MSG_ID) String() string {
	return proto.EnumName(MsgHeader_MSG_ID_name, int32(x))
}
func (x *MsgHeader_MSG_ID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgHeader_MSG_ID_value, data, "MsgHeader_MSG_ID")
	if err != nil {
		return err
	}
	*x = MsgHeader_MSG_ID(value)
	return nil
}
func (MsgHeader_MSG_ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type ErlangHandlerLoginHandler int32

const (
	ErlangHandler_user_login_c2s                ErlangHandlerLoginHandler = 1
	ErlangHandler_user_auth_c2s                 ErlangHandlerLoginHandler = 2
	ErlangHandler_platform_bind_c2s             ErlangHandlerLoginHandler = 3
	ErlangHandler_platform_bind_use_archive_c2s ErlangHandlerLoginHandler = 4
	ErlangHandler_query_package_info_c2s        ErlangHandlerLoginHandler = 5
	ErlangHandler_check_device_info_c2s         ErlangHandlerLoginHandler = 6
	ErlangHandler_query_main_page_info_c2s      ErlangHandlerLoginHandler = 7
	ErlangHandler_server_state_c2s              ErlangHandlerLoginHandler = 8
)

var ErlangHandlerLoginHandler_name = map[int32]string{
	1: "user_login_c2s",
	2: "user_auth_c2s",
	3: "platform_bind_c2s",
	4: "platform_bind_use_archive_c2s",
	5: "query_package_info_c2s",
	6: "check_device_info_c2s",
	7: "query_main_page_info_c2s",
	8: "server_state_c2s",
}
var ErlangHandlerLoginHandler_value = map[string]int32{
	"user_login_c2s":                1,
	"user_auth_c2s":                 2,
	"platform_bind_c2s":             3,
	"platform_bind_use_archive_c2s": 4,
	"query_package_info_c2s":        5,
	"check_device_info_c2s":         6,
	"query_main_page_info_c2s":      7,
	"server_state_c2s":              8,
}

func (x ErlangHandlerLoginHandler) Enum() *ErlangHandlerLoginHandler {
	p := new(ErlangHandlerLoginHandler)
	*p = x
	return p
}
func (x ErlangHandlerLoginHandler) String() string {
	return proto.EnumName(ErlangHandlerLoginHandler_name, int32(x))
}
func (x *ErlangHandlerLoginHandler) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErlangHandlerLoginHandler_value, data, "ErlangHandlerLoginHandler")
	if err != nil {
		return err
	}
	*x = ErlangHandlerLoginHandler(value)
	return nil
}
func (ErlangHandlerLoginHandler) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Kvobject struct {
	Key              *uint32 `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Value            *int32  `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Kvobject) Reset()                    { *m = Kvobject{} }
func (m *Kvobject) String() string            { return proto.CompactTextString(m) }
func (*Kvobject) ProtoMessage()               {}
func (*Kvobject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Kvobject) GetKey() uint32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *Kvobject) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type MsgHeader struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgHeader) Reset()                    { *m = MsgHeader{} }
func (m *MsgHeader) String() string            { return proto.CompactTextString(m) }
func (*MsgHeader) ProtoMessage()               {}
func (*MsgHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MsgHeader) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

type ErlangHandler struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ErlangHandler) Reset()                    { *m = ErlangHandler{} }
func (m *ErlangHandler) String() string            { return proto.CompactTextString(m) }
func (*ErlangHandler) ProtoMessage()               {}
func (*ErlangHandler) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Platinfo struct {
	Opentype         *int32  `protobuf:"varint,1,req,name=opentype" json:"opentype,omitempty"`
	Userid           *string `protobuf:"bytes,2,req,name=userid" json:"userid,omitempty"`
	Name             *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Img              *string `protobuf:"bytes,4,req,name=img" json:"img,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Platinfo) Reset()                    { *m = Platinfo{} }
func (m *Platinfo) String() string            { return proto.CompactTextString(m) }
func (*Platinfo) ProtoMessage()               {}
func (*Platinfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Platinfo) GetOpentype() int32 {
	if m != nil && m.Opentype != nil {
		return *m.Opentype
	}
	return 0
}

func (m *Platinfo) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *Platinfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Platinfo) GetImg() string {
	if m != nil && m.Img != nil {
		return *m.Img
	}
	return ""
}

type ServerVersionS2C struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	BVersion         *string `protobuf:"bytes,2,req,name=b_version,json=bVersion" json:"b_version,omitempty"`
	SVersion         *string `protobuf:"bytes,3,req,name=s_version,json=sVersion" json:"s_version,omitempty"`
	Data             *string `protobuf:"bytes,4,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerVersionS2C) Reset()                    { *m = ServerVersionS2C{} }
func (m *ServerVersionS2C) String() string            { return proto.CompactTextString(m) }
func (*ServerVersionS2C) ProtoMessage()               {}
func (*ServerVersionS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ServerVersionS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *ServerVersionS2C) GetBVersion() string {
	if m != nil && m.BVersion != nil {
		return *m.BVersion
	}
	return ""
}

func (m *ServerVersionS2C) GetSVersion() string {
	if m != nil && m.SVersion != nil {
		return *m.SVersion
	}
	return ""
}

func (m *ServerVersionS2C) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

type UserLoginC2S struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Deviceid         *string `protobuf:"bytes,2,req,name=deviceid" json:"deviceid,omitempty"`
	Ostype           *string `protobuf:"bytes,3,req,name=ostype" json:"ostype,omitempty"`
	Devicename       *string `protobuf:"bytes,4,req,name=devicename" json:"devicename,omitempty"`
	Osversion        *string `protobuf:"bytes,5,req,name=osversion" json:"osversion,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserLoginC2S) Reset()                    { *m = UserLoginC2S{} }
func (m *UserLoginC2S) String() string            { return proto.CompactTextString(m) }
func (*UserLoginC2S) ProtoMessage()               {}
func (*UserLoginC2S) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserLoginC2S) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserLoginC2S) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *UserLoginC2S) GetOstype() string {
	if m != nil && m.Ostype != nil {
		return *m.Ostype
	}
	return ""
}

func (m *UserLoginC2S) GetDevicename() string {
	if m != nil && m.Devicename != nil {
		return *m.Devicename
	}
	return ""
}

func (m *UserLoginC2S) GetOsversion() string {
	if m != nil && m.Osversion != nil {
		return *m.Osversion
	}
	return ""
}

type UserLoginSuccessS2C struct {
	Msgid            *uint32     `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Accinfo          []*Kvobject `protobuf:"bytes,2,rep,name=accinfo" json:"accinfo,omitempty"`
	Platinfos        []*Platinfo `protobuf:"bytes,3,rep,name=platinfos" json:"platinfos,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UserLoginSuccessS2C) Reset()                    { *m = UserLoginSuccessS2C{} }
func (m *UserLoginSuccessS2C) String() string            { return proto.CompactTextString(m) }
func (*UserLoginSuccessS2C) ProtoMessage()               {}
func (*UserLoginSuccessS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UserLoginSuccessS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserLoginSuccessS2C) GetAccinfo() []*Kvobject {
	if m != nil {
		return m.Accinfo
	}
	return nil
}

func (m *UserLoginSuccessS2C) GetPlatinfos() []*Platinfo {
	if m != nil {
		return m.Platinfos
	}
	return nil
}

type UserLoginFailedS2C struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Reasonid         *int32  `protobuf:"varint,2,req,name=reasonid" json:"reasonid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserLoginFailedS2C) Reset()                    { *m = UserLoginFailedS2C{} }
func (m *UserLoginFailedS2C) String() string            { return proto.CompactTextString(m) }
func (*UserLoginFailedS2C) ProtoMessage()               {}
func (*UserLoginFailedS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserLoginFailedS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserLoginFailedS2C) GetReasonid() int32 {
	if m != nil && m.Reasonid != nil {
		return *m.Reasonid
	}
	return 0
}

type UserAuthC2S struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Session          *string `protobuf:"bytes,2,req,name=session" json:"session,omitempty"`
	Time             *string `protobuf:"bytes,3,req,name=time" json:"time,omitempty"`
	Sign             *string `protobuf:"bytes,4,req,name=sign" json:"sign,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserAuthC2S) Reset()                    { *m = UserAuthC2S{} }
func (m *UserAuthC2S) String() string            { return proto.CompactTextString(m) }
func (*UserAuthC2S) ProtoMessage()               {}
func (*UserAuthC2S) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UserAuthC2S) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserAuthC2S) GetSession() string {
	if m != nil && m.Session != nil {
		return *m.Session
	}
	return ""
}

func (m *UserAuthC2S) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

func (m *UserAuthC2S) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

type UserAuthSuccessS2C struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserAuthSuccessS2C) Reset()                    { *m = UserAuthSuccessS2C{} }
func (m *UserAuthSuccessS2C) String() string            { return proto.CompactTextString(m) }
func (*UserAuthSuccessS2C) ProtoMessage()               {}
func (*UserAuthSuccessS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UserAuthSuccessS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

type UserAuthFailedS2C struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Reasonid         *int32  `protobuf:"varint,2,req,name=reasonid" json:"reasonid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserAuthFailedS2C) Reset()                    { *m = UserAuthFailedS2C{} }
func (m *UserAuthFailedS2C) String() string            { return proto.CompactTextString(m) }
func (*UserAuthFailedS2C) ProtoMessage()               {}
func (*UserAuthFailedS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UserAuthFailedS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserAuthFailedS2C) GetReasonid() int32 {
	if m != nil && m.Reasonid != nil {
		return *m.Reasonid
	}
	return 0
}

type Replace struct {
	Replace1         []*Symbol `protobuf:"bytes,1,rep,name=replace1" json:"replace1,omitempty"`
	Replace2         []*Symbol `protobuf:"bytes,2,rep,name=replace2" json:"replace2,omitempty"`
	Replace3         []*Symbol `protobuf:"bytes,3,rep,name=replace3" json:"replace3,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Replace) Reset()                    { *m = Replace{} }
func (m *Replace) String() string            { return proto.CompactTextString(m) }
func (*Replace) ProtoMessage()               {}
func (*Replace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Replace) GetReplace1() []*Symbol {
	if m != nil {
		return m.Replace1
	}
	return nil
}

func (m *Replace) GetReplace2() []*Symbol {
	if m != nil {
		return m.Replace2
	}
	return nil
}

func (m *Replace) GetReplace3() []*Symbol {
	if m != nil {
		return m.Replace3
	}
	return nil
}

type Symbol struct {
	X                *int32 `protobuf:"varint,1,req,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,req,name=y" json:"y,omitempty"`
	Symbolid         *int32 `protobuf:"varint,3,req,name=symbolid" json:"symbolid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Symbol) Reset()                    { *m = Symbol{} }
func (m *Symbol) String() string            { return proto.CompactTextString(m) }
func (*Symbol) ProtoMessage()               {}
func (*Symbol) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Symbol) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Symbol) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Symbol) GetSymbolid() int32 {
	if m != nil && m.Symbolid != nil {
		return *m.Symbolid
	}
	return 0
}

// lineid:0 scatter, -1 bonus 大于0普通线
type Line struct {
	Lineid           *uint32       `protobuf:"varint,1,req,name=lineid" json:"lineid,omitempty"`
	Coordinates      []*Coordinate `protobuf:"bytes,2,rep,name=coordinates" json:"coordinates,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Line) Reset()                    { *m = Line{} }
func (m *Line) String() string            { return proto.CompactTextString(m) }
func (*Line) ProtoMessage()               {}
func (*Line) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Line) GetLineid() uint32 {
	if m != nil && m.Lineid != nil {
		return *m.Lineid
	}
	return 0
}

func (m *Line) GetCoordinates() []*Coordinate {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

type Coordinate struct {
	X                *int32 `protobuf:"varint,1,req,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Coordinate) Reset()                    { *m = Coordinate{} }
func (m *Coordinate) String() string            { return proto.CompactTextString(m) }
func (*Coordinate) ProtoMessage()               {}
func (*Coordinate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Coordinate) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Coordinate) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type Rewardinfo struct {
	Gold             *int64 `protobuf:"varint,1,req,name=gold" json:"gold,omitempty"`
	Exp              *int64 `protobuf:"varint,2,req,name=exp" json:"exp,omitempty"`
	Spin             *int32 `protobuf:"varint,3,req,name=spin" json:"spin,omitempty"`
	Gameid           *int32 `protobuf:"varint,4,req,name=gameid" json:"gameid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Rewardinfo) Reset()                    { *m = Rewardinfo{} }
func (m *Rewardinfo) String() string            { return proto.CompactTextString(m) }
func (*Rewardinfo) ProtoMessage()               {}
func (*Rewardinfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Rewardinfo) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Rewardinfo) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *Rewardinfo) GetSpin() int32 {
	if m != nil && m.Spin != nil {
		return *m.Spin
	}
	return 0
}

func (m *Rewardinfo) GetGameid() int32 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

type Eventinfo struct {
	Id               *int32        `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Num              *int32        `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	Coordinates      []*Coordinate `protobuf:"bytes,3,rep,name=coordinates" json:"coordinates,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Eventinfo) Reset()                    { *m = Eventinfo{} }
func (m *Eventinfo) String() string            { return proto.CompactTextString(m) }
func (*Eventinfo) ProtoMessage()               {}
func (*Eventinfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Eventinfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Eventinfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *Eventinfo) GetCoordinates() []*Coordinate {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

type Rewardstruct struct {
	Bet              *int32 `protobuf:"varint,1,req,name=bet" json:"bet,omitempty"`
	Spin             *int32 `protobuf:"varint,2,req,name=spin" json:"spin,omitempty"`
	Gameid           *int32 `protobuf:"varint,3,req,name=gameid" json:"gameid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Rewardstruct) Reset()                    { *m = Rewardstruct{} }
func (m *Rewardstruct) String() string            { return proto.CompactTextString(m) }
func (*Rewardstruct) ProtoMessage()               {}
func (*Rewardstruct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Rewardstruct) GetBet() int32 {
	if m != nil && m.Bet != nil {
		return *m.Bet
	}
	return 0
}

func (m *Rewardstruct) GetSpin() int32 {
	if m != nil && m.Spin != nil {
		return *m.Spin
	}
	return 0
}

func (m *Rewardstruct) GetGameid() int32 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

type UserThemeSpinC2S struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Themeid          *int32  `protobuf:"varint,2,req,name=themeid" json:"themeid,omitempty"`
	Isfree           *uint32 `protobuf:"varint,3,req,name=isfree" json:"isfree,omitempty"`
	Bet              *int32  `protobuf:"varint,4,req,name=bet" json:"bet,omitempty"`
	Gold             *int64  `protobuf:"varint,5,req,name=gold" json:"gold,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserThemeSpinC2S) Reset()                    { *m = UserThemeSpinC2S{} }
func (m *UserThemeSpinC2S) String() string            { return proto.CompactTextString(m) }
func (*UserThemeSpinC2S) ProtoMessage()               {}
func (*UserThemeSpinC2S) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *UserThemeSpinC2S) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserThemeSpinC2S) GetThemeid() int32 {
	if m != nil && m.Themeid != nil {
		return *m.Themeid
	}
	return 0
}

func (m *UserThemeSpinC2S) GetIsfree() uint32 {
	if m != nil && m.Isfree != nil {
		return *m.Isfree
	}
	return 0
}

func (m *UserThemeSpinC2S) GetBet() int32 {
	if m != nil && m.Bet != nil {
		return *m.Bet
	}
	return 0
}

func (m *UserThemeSpinC2S) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

type UserThemeSpinSuccessS2C struct {
	Msgid            *uint32      `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Symbols          []*Symbol    `protobuf:"bytes,2,rep,name=symbols" json:"symbols,omitempty"`
	Lines            []*Line      `protobuf:"bytes,3,rep,name=lines" json:"lines,omitempty"`
	Replace          *Replace     `protobuf:"bytes,4,req,name=replace" json:"replace,omitempty"`
	Rewardinfo       *Rewardinfo  `protobuf:"bytes,5,req,name=rewardinfo" json:"rewardinfo,omitempty"`
	Eventinfo        []*Eventinfo `protobuf:"bytes,6,rep,name=eventinfo" json:"eventinfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *UserThemeSpinSuccessS2C) Reset()                    { *m = UserThemeSpinSuccessS2C{} }
func (m *UserThemeSpinSuccessS2C) String() string            { return proto.CompactTextString(m) }
func (*UserThemeSpinSuccessS2C) ProtoMessage()               {}
func (*UserThemeSpinSuccessS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UserThemeSpinSuccessS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserThemeSpinSuccessS2C) GetSymbols() []*Symbol {
	if m != nil {
		return m.Symbols
	}
	return nil
}

func (m *UserThemeSpinSuccessS2C) GetLines() []*Line {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *UserThemeSpinSuccessS2C) GetReplace() *Replace {
	if m != nil {
		return m.Replace
	}
	return nil
}

func (m *UserThemeSpinSuccessS2C) GetRewardinfo() *Rewardinfo {
	if m != nil {
		return m.Rewardinfo
	}
	return nil
}

func (m *UserThemeSpinSuccessS2C) GetEventinfo() []*Eventinfo {
	if m != nil {
		return m.Eventinfo
	}
	return nil
}

type UserThemeSpinFailedS2C struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Reasonid         *int32  `protobuf:"varint,2,req,name=reasonid" json:"reasonid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserThemeSpinFailedS2C) Reset()                    { *m = UserThemeSpinFailedS2C{} }
func (m *UserThemeSpinFailedS2C) String() string            { return proto.CompactTextString(m) }
func (*UserThemeSpinFailedS2C) ProtoMessage()               {}
func (*UserThemeSpinFailedS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *UserThemeSpinFailedS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserThemeSpinFailedS2C) GetReasonid() int32 {
	if m != nil && m.Reasonid != nil {
		return *m.Reasonid
	}
	return 0
}

type UserThemeSpinOptimizeC2S struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Themeid          *int32  `protobuf:"varint,2,req,name=themeid" json:"themeid,omitempty"`
	Isfree           *uint32 `protobuf:"varint,3,req,name=isfree" json:"isfree,omitempty"`
	Bet              *int32  `protobuf:"varint,4,req,name=bet" json:"bet,omitempty"`
	Gold             *int64  `protobuf:"varint,5,req,name=gold" json:"gold,omitempty"`
	Type             *uint32 `protobuf:"varint,6,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserThemeSpinOptimizeC2S) Reset()                    { *m = UserThemeSpinOptimizeC2S{} }
func (m *UserThemeSpinOptimizeC2S) String() string            { return proto.CompactTextString(m) }
func (*UserThemeSpinOptimizeC2S) ProtoMessage()               {}
func (*UserThemeSpinOptimizeC2S) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *UserThemeSpinOptimizeC2S) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserThemeSpinOptimizeC2S) GetThemeid() int32 {
	if m != nil && m.Themeid != nil {
		return *m.Themeid
	}
	return 0
}

func (m *UserThemeSpinOptimizeC2S) GetIsfree() uint32 {
	if m != nil && m.Isfree != nil {
		return *m.Isfree
	}
	return 0
}

func (m *UserThemeSpinOptimizeC2S) GetBet() int32 {
	if m != nil && m.Bet != nil {
		return *m.Bet
	}
	return 0
}

func (m *UserThemeSpinOptimizeC2S) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *UserThemeSpinOptimizeC2S) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type UserThemeSpinOptimizeSuccessS2C struct {
	Msgid            *uint32       `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Symbols          []*Symbol     `protobuf:"bytes,2,rep,name=symbols" json:"symbols,omitempty"`
	Lines            []*Line       `protobuf:"bytes,3,rep,name=lines" json:"lines,omitempty"`
	Replace          *Replace      `protobuf:"bytes,4,req,name=replace" json:"replace,omitempty"`
	Rewardinfo       *Rewardstruct `protobuf:"bytes,5,req,name=rewardinfo" json:"rewardinfo,omitempty"`
	Eventinfo        []*Eventinfo  `protobuf:"bytes,6,rep,name=eventinfo" json:"eventinfo,omitempty"`
	Time             *int32        `protobuf:"varint,7,req,name=time" json:"time,omitempty"`
	Chance           *string       `protobuf:"bytes,8,req,name=chance" json:"chance,omitempty"`
	Free             *int32        `protobuf:"varint,9,req,name=free" json:"free,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *UserThemeSpinOptimizeSuccessS2C) Reset()         { *m = UserThemeSpinOptimizeSuccessS2C{} }
func (m *UserThemeSpinOptimizeSuccessS2C) String() string { return proto.CompactTextString(m) }
func (*UserThemeSpinOptimizeSuccessS2C) ProtoMessage()    {}
func (*UserThemeSpinOptimizeSuccessS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetSymbols() []*Symbol {
	if m != nil {
		return m.Symbols
	}
	return nil
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetLines() []*Line {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetReplace() *Replace {
	if m != nil {
		return m.Replace
	}
	return nil
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetRewardinfo() *Rewardstruct {
	if m != nil {
		return m.Rewardinfo
	}
	return nil
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetEventinfo() []*Eventinfo {
	if m != nil {
		return m.Eventinfo
	}
	return nil
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetChance() string {
	if m != nil && m.Chance != nil {
		return *m.Chance
	}
	return ""
}

func (m *UserThemeSpinOptimizeSuccessS2C) GetFree() int32 {
	if m != nil && m.Free != nil {
		return *m.Free
	}
	return 0
}

type UserThemeSpinOptimizeFailedS2C struct {
	Msgid            *uint32 `protobuf:"varint,1,req,name=msgid" json:"msgid,omitempty"`
	Reasonid         *int32  `protobuf:"varint,2,req,name=reasonid" json:"reasonid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserThemeSpinOptimizeFailedS2C) Reset()                    { *m = UserThemeSpinOptimizeFailedS2C{} }
func (m *UserThemeSpinOptimizeFailedS2C) String() string            { return proto.CompactTextString(m) }
func (*UserThemeSpinOptimizeFailedS2C) ProtoMessage()               {}
func (*UserThemeSpinOptimizeFailedS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *UserThemeSpinOptimizeFailedS2C) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *UserThemeSpinOptimizeFailedS2C) GetReasonid() int32 {
	if m != nil && m.Reasonid != nil {
		return *m.Reasonid
	}
	return 0
}

func init() {
	proto.RegisterType((*Kvobject)(nil), "pb_game.kvobject")
	proto.RegisterType((*MsgHeader)(nil), "pb_game.msg_header")
	proto.RegisterType((*ErlangHandler)(nil), "pb_game.erlang_handler")
	proto.RegisterType((*Platinfo)(nil), "pb_game.platinfo")
	proto.RegisterType((*ServerVersionS2C)(nil), "pb_game.server_version_s2c")
	proto.RegisterType((*UserLoginC2S)(nil), "pb_game.user_login_c2s")
	proto.RegisterType((*UserLoginSuccessS2C)(nil), "pb_game.user_login_success_s2c")
	proto.RegisterType((*UserLoginFailedS2C)(nil), "pb_game.user_login_failed_s2c")
	proto.RegisterType((*UserAuthC2S)(nil), "pb_game.user_auth_c2s")
	proto.RegisterType((*UserAuthSuccessS2C)(nil), "pb_game.user_auth_success_s2c")
	proto.RegisterType((*UserAuthFailedS2C)(nil), "pb_game.user_auth_failed_s2c")
	proto.RegisterType((*Replace)(nil), "pb_game.replace")
	proto.RegisterType((*Symbol)(nil), "pb_game.symbol")
	proto.RegisterType((*Line)(nil), "pb_game.line")
	proto.RegisterType((*Coordinate)(nil), "pb_game.coordinate")
	proto.RegisterType((*Rewardinfo)(nil), "pb_game.rewardinfo")
	proto.RegisterType((*Eventinfo)(nil), "pb_game.eventinfo")
	proto.RegisterType((*Rewardstruct)(nil), "pb_game.rewardstruct")
	proto.RegisterType((*UserThemeSpinC2S)(nil), "pb_game.user_theme_spin_c2s")
	proto.RegisterType((*UserThemeSpinSuccessS2C)(nil), "pb_game.user_theme_spin_success_s2c")
	proto.RegisterType((*UserThemeSpinFailedS2C)(nil), "pb_game.user_theme_spin_failed_s2c")
	proto.RegisterType((*UserThemeSpinOptimizeC2S)(nil), "pb_game.user_theme_spin_optimize_c2s")
	proto.RegisterType((*UserThemeSpinOptimizeSuccessS2C)(nil), "pb_game.user_theme_spin_optimize_success_s2c")
	proto.RegisterType((*UserThemeSpinOptimizeFailedS2C)(nil), "pb_game.user_theme_spin_optimize_failed_s2c")
	proto.RegisterEnum("pb_game.MsgHeader_MSG_ID", MsgHeader_MSG_ID_name, MsgHeader_MSG_ID_value)
	proto.RegisterEnum("pb_game.ErlangHandlerLoginHandler", ErlangHandlerLoginHandler_name, ErlangHandlerLoginHandler_value)
}

func init() { proto.RegisterFile("game.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4b, 0x6f, 0xe3, 0x44,
	0x1c, 0x97, 0x93, 0x38, 0x8f, 0x7f, 0xb7, 0xa5, 0x9d, 0x6d, 0x8b, 0xe9, 0x96, 0x6e, 0x3b, 0xdd,
	0x76, 0xd3, 0x96, 0x2d, 0x90, 0x6a, 0xef, 0x1c, 0x90, 0x60, 0x25, 0xe0, 0x60, 0x04, 0xdc, 0xb0,
	0x26, 0xf6, 0x34, 0x19, 0xea, 0x17, 0x1e, 0x27, 0x34, 0x5c, 0xb9, 0x72, 0xe0, 0x84, 0x38, 0xf2,
	0x75, 0xf8, 0x0c, 0x9c, 0xf8, 0x02, 0xfb, 0x19, 0xd0, 0x3c, 0x3c, 0x99, 0xa6, 0x71, 0x54, 0x16,
	0x09, 0x71, 0xf2, 0xff, 0xf1, 0x9b, 0xf9, 0xbf, 0xff, 0x1e, 0x80, 0x11, 0x49, 0xe8, 0x65, 0x5e,
	0x64, 0x65, 0x86, 0x3a, 0xf9, 0x30, 0x10, 0x2c, 0x1e, 0x40, 0xf7, 0x66, 0x9a, 0x0d, 0xbf, 0xa3,
	0x61, 0x89, 0x36, 0xa1, 0x79, 0x43, 0x67, 0x9e, 0x73, 0xd8, 0xe8, 0xaf, 0xfb, 0x82, 0x44, 0xdb,
	0xe0, 0x4e, 0x49, 0x3c, 0xa1, 0x5e, 0xe3, 0xb0, 0xd1, 0x77, 0x7d, 0xc5, 0xe0, 0xd7, 0x2e, 0x40,
	0xc2, 0x47, 0xc1, 0x98, 0x92, 0x88, 0x16, 0x02, 0x94, 0xf0, 0x11, 0x8b, 0xf4, 0x41, 0xc5, 0xe0,
	0x3f, 0x5c, 0x68, 0x7f, 0xfe, 0xe5, 0x27, 0xc1, 0xab, 0x8f, 0xd1, 0x2e, 0x20, 0x4e, 0x8b, 0x29,
	0x2d, 0x82, 0x29, 0x2d, 0x38, 0xcb, 0xd2, 0x80, 0x0f, 0xc2, 0xcd, 0x06, 0x42, 0xb0, 0x31, 0xe1,
	0xb4, 0x08, 0xe2, 0x6c, 0xc4, 0xd2, 0x20, 0x1c, 0xf0, 0xcd, 0x16, 0xda, 0x83, 0x5d, 0x4b, 0xc6,
	0x27, 0x61, 0x48, 0x39, 0x97, 0x78, 0x17, 0xbd, 0x03, 0x3b, 0x96, 0xee, 0x9a, 0xb0, 0x98, 0x46,
	0x52, 0xd5, 0x46, 0x5b, 0xb0, 0x2e, 0x55, 0x64, 0x52, 0x8e, 0xe5, 0x4d, 0x1d, 0x83, 0x96, 0x22,
	0xfb, 0xa2, 0x2e, 0xf2, 0x60, 0x7b, 0xae, 0xb2, 0xee, 0xe9, 0x19, 0x0d, 0x4d, 0x4b, 0x5a, 0x04,
	0xe5, 0x98, 0x26, 0x54, 0x5e, 0xf7, 0x14, 0x1d, 0xc2, 0xfe, 0x3d, 0x8d, 0x7d, 0xeb, 0x21, 0x7a,
	0x0a, 0x4f, 0xee, 0x21, 0xac, 0xcb, 0x8f, 0xd0, 0xdb, 0xf0, 0x58, 0x02, 0xf4, 0xe1, 0x5c, 0x07,
	0x8d, 0xcd, 0x49, 0x4b, 0x61, 0x5f, 0x7d, 0x8c, 0x0e, 0x60, 0x6f, 0x11, 0x60, 0xdd, 0xfc, 0xcc,
	0x38, 0x67, 0xe9, 0xb3, 0xbc, 0x64, 0x09, 0xfb, 0x51, 0xb9, 0x7f, 0x82, 0xfa, 0xf0, 0xac, 0x16,
	0x61, 0xdb, 0x3a, 0x45, 0xcf, 0xe1, 0xb8, 0x16, 0x69, 0x19, 0x7d, 0xbe, 0xe8, 0xd4, 0x2c, 0x0d,
	0xc7, 0x45, 0x96, 0x56, 0x26, 0xfb, 0xe8, 0x14, 0x70, 0x8d, 0xde, 0x36, 0x78, 0x86, 0x4e, 0xe0,
	0xa8, 0x06, 0x67, 0x99, 0x3b, 0x47, 0x18, 0x0e, 0xee, 0x65, 0x2f, 0x4b, 0x72, 0x52, 0xb2, 0x61,
	0xac, 0x4c, 0x5e, 0xa0, 0x73, 0x38, 0x5d, 0x81, 0xb1, 0xcd, 0xbe, 0x87, 0xce, 0xe0, 0x64, 0x05,
	0xd6, 0x32, 0xfd, 0x02, 0xbf, 0x76, 0x60, 0x83, 0x16, 0x31, 0x49, 0x47, 0xc1, 0x98, 0xa4, 0x51,
	0x4c, 0x0b, 0xfc, 0xa7, 0x03, 0xeb, 0xaa, 0x0f, 0xb5, 0x64, 0x49, 0x37, 0x3b, 0xf7, 0xdb, 0xb2,
	0x81, 0x76, 0x60, 0x2b, 0x8f, 0x49, 0x79, 0x9d, 0x15, 0x49, 0x30, 0x64, 0x69, 0x24, 0xc5, 0x4d,
	0x74, 0x04, 0xef, 0xde, 0x15, 0x4f, 0x38, 0x0d, 0x48, 0x11, 0x8e, 0xd9, 0x94, 0xce, 0x47, 0xe3,
	0xfb, 0x09, 0x2d, 0x66, 0x41, 0x4e, 0xc2, 0x1b, 0x32, 0xa2, 0x01, 0x4b, 0xaf, 0x33, 0xa9, 0x93,
	0xa3, 0x11, 0x8e, 0x69, 0x78, 0x13, 0x44, 0x74, 0xca, 0x42, 0x4b, 0xd5, 0x46, 0xfb, 0xe0, 0xa9,
	0x63, 0x09, 0x61, 0x69, 0x90, 0xdf, 0x39, 0xd8, 0x41, 0xdb, 0xb0, 0xa9, 0x67, 0x93, 0x97, 0xa4,
	0x54, 0xa6, 0xba, 0x38, 0x82, 0xae, 0xf0, 0x46, 0xe0, 0xd0, 0x1e, 0x74, 0xb3, 0x9c, 0xa6, 0xe5,
	0x2c, 0xa7, 0x72, 0xc2, 0x5d, 0xdf, 0xf0, 0x68, 0x17, 0xda, 0x22, 0x3e, 0x16, 0xc9, 0x05, 0xd1,
	0xf3, 0x35, 0x87, 0x10, 0xb4, 0x52, 0x92, 0x50, 0xaf, 0x29, 0xa5, 0x92, 0x16, 0xdb, 0x85, 0x25,
	0x23, 0xaf, 0x25, 0x45, 0x82, 0xc4, 0xb7, 0xcb, 0xf6, 0xc2, 0xf2, 0x75, 0x82, 0x9e, 0x40, 0x6f,
	0x58, 0xc1, 0xb4, 0xb1, 0xee, 0xf0, 0x6b, 0xc5, 0x0b, 0x25, 0x37, 0x4a, 0x65, 0xb3, 0xcb, 0x2b,
	0x25, 0x82, 0x56, 0x44, 0x4a, 0xa2, 0x0d, 0x4b, 0x1a, 0xff, 0xe6, 0x2c, 0x16, 0xab, 0xc6, 0xec,
	0x1e, 0x74, 0x55, 0x46, 0x4d, 0x88, 0x86, 0x17, 0xc1, 0x67, 0x5c, 0xa6, 0x45, 0x99, 0xd4, 0x1c,
	0x3a, 0x00, 0x50, 0x18, 0x99, 0x02, 0x65, 0xd6, 0x92, 0xa0, 0x7d, 0xe8, 0x65, 0xbc, 0xf2, 0xd6,
	0x95, 0xea, 0xb9, 0x00, 0xff, 0xec, 0xd4, 0x6d, 0xc0, 0x1a, 0x17, 0x2f, 0xa0, 0x43, 0xc2, 0x50,
	0x94, 0xca, 0x6b, 0x1c, 0x36, 0xfb, 0x6b, 0x83, 0xad, 0x4b, 0xbd, 0xdc, 0x2f, 0xab, 0xcd, 0xee,
	0x57, 0x08, 0xf4, 0x3e, 0xf4, 0xaa, 0xc2, 0x72, 0xaf, 0xb9, 0x00, 0xaf, 0x34, 0xfe, 0x1c, 0x83,
	0x5f, 0xd5, 0xec, 0xdc, 0xfa, 0x7c, 0x15, 0x94, 0xf0, 0x2c, 0xd5, 0xf9, 0x72, 0x7d, 0xc3, 0xe3,
	0xd1, 0xc2, 0x30, 0xd4, 0x5c, 0xe1, 0x41, 0x87, 0x53, 0x6e, 0xd5, 0xb9, 0x62, 0x45, 0x25, 0x4b,
	0x36, 0xef, 0x2a, 0x41, 0x0b, 0x19, 0x67, 0xa3, 0xb4, 0xaa, 0xae, 0xa0, 0xf1, 0x8b, 0x9a, 0xcd,
	0x5f, 0xf3, 0xa7, 0xfa, 0x74, 0xf9, 0xdf, 0xe0, 0x0d, 0x22, 0xfc, 0xc5, 0x81, 0x4e, 0x41, 0xf3,
	0x98, 0x84, 0x14, 0x5d, 0x08, 0x9c, 0x24, 0x3f, 0xf4, 0x1c, 0x99, 0xe8, 0xb7, 0x4c, 0xa2, 0xf9,
	0x2c, 0x19, 0x66, 0xb1, 0x6f, 0x00, 0x16, 0x78, 0xa0, 0x8b, 0x58, 0x0b, 0x1e, 0x58, 0xe0, 0x2b,
	0x5d, 0xc2, 0x5a, 0xf0, 0x15, 0xfe, 0x08, 0xda, 0x4a, 0x86, 0x1e, 0x81, 0x73, 0xab, 0x07, 0xd8,
	0xb9, 0x15, 0xdc, 0x4c, 0xfb, 0xef, 0xcc, 0x44, 0x50, 0x0a, 0xc5, 0x22, 0x99, 0x5d, 0xd7, 0x37,
	0x3c, 0xfe, 0x0a, 0x5a, 0x31, 0x4b, 0xe5, 0xac, 0x8b, 0xaf, 0xc9, 0x87, 0xe6, 0xd0, 0x4b, 0x58,
	0x0b, 0xb3, 0xac, 0x88, 0x58, 0x4a, 0x4a, 0xca, 0xb5, 0xfb, 0x8f, 0x8d, 0x47, 0x73, 0x9d, 0x6f,
	0xe3, 0x70, 0x1f, 0x60, 0xce, 0xae, 0x72, 0x0e, 0x7f, 0x0b, 0x50, 0xd0, 0x1f, 0x88, 0x80, 0x5e,
	0x67, 0xa2, 0xe0, 0xa3, 0x2c, 0x56, 0x4e, 0x34, 0x7d, 0x49, 0x8b, 0xd5, 0x42, 0x6f, 0x73, 0x79,
	0xa2, 0xe9, 0x0b, 0x52, 0xb6, 0x45, 0xce, 0x52, 0x1d, 0x8c, 0xa4, 0x45, 0x00, 0xc2, 0x23, 0x16,
	0xc9, 0x66, 0x71, 0x7d, 0xcd, 0xe1, 0x08, 0x7a, 0x74, 0x4a, 0x53, 0xb5, 0xed, 0x36, 0xa0, 0xa1,
	0x23, 0x74, 0xfd, 0x06, 0x93, 0x57, 0xa7, 0x93, 0x44, 0x3b, 0x23, 0xc8, 0xc5, 0x78, 0x9b, 0x0f,
	0x8c, 0xf7, 0x33, 0x78, 0xa4, 0xa2, 0xe0, 0x65, 0x31, 0x51, 0x8f, 0xad, 0x21, 0x2d, 0xb5, 0x25,
	0x41, 0x1a, 0x9f, 0x1b, 0x4b, 0x7d, 0x6e, 0xde, 0xf1, 0xf9, 0x27, 0x67, 0xe9, 0x5b, 0xa2, 0x7e,
	0xa4, 0x24, 0xce, 0xb4, 0x6c, 0xc5, 0x8a, 0xfb, 0x19, 0xbf, 0x2e, 0xa8, 0x1a, 0xaa, 0x75, 0x5f,
	0x73, 0x95, 0x77, 0xad, 0x3b, 0xde, 0xc9, 0xbc, 0xbb, 0xf3, 0xbc, 0xe3, 0x5f, 0x1b, 0x2b, 0x1f,
	0x2e, 0x35, 0xde, 0x9c, 0x41, 0x47, 0x35, 0x17, 0xaf, 0xeb, 0xf5, 0x4a, 0x8f, 0x8e, 0xc1, 0x15,
	0x5d, 0x56, 0x65, 0x79, 0xdd, 0x00, 0x85, 0xd4, 0x57, 0x3a, 0x74, 0x6e, 0x86, 0x4e, 0xfa, 0xbb,
	0x36, 0xd8, 0x34, 0x30, 0x2d, 0xf7, 0xcd, 0x54, 0x5e, 0xd9, 0xbd, 0x24, 0x63, 0xb1, 0x6b, 0x37,
	0x57, 0xf9, 0x76, 0xcb, 0x7d, 0x60, 0x35, 0x88, 0xd7, 0x96, 0x9e, 0x20, 0x73, 0xc6, 0x68, 0xfc,
	0x39, 0x08, 0x7f, 0xb1, 0xea, 0xbd, 0xf6, 0x06, 0x8b, 0xe5, 0x77, 0x67, 0xf5, 0x03, 0xef, 0xbf,
	0xad, 0xbb, 0x5c, 0xc4, 0xe2, 0xbf, 0xd7, 0x96, 0x67, 0x25, 0x8d, 0xff, 0x6a, 0x3c, 0xec, 0x85,
	0xf9, 0x3f, 0x6c, 0x8a, 0x97, 0x4b, 0x9a, 0x62, 0x67, 0xa1, 0x29, 0xd4, 0xd4, 0xfe, 0xbb, 0xb6,
	0x30, 0x3f, 0xb0, 0x8e, 0x9a, 0x70, 0xf9, 0x03, 0xdb, 0x85, 0x76, 0x38, 0x26, 0x69, 0x48, 0xbd,
	0xae, 0x7a, 0x45, 0x28, 0x4e, 0x60, 0x65, 0x7d, 0x7a, 0x0a, 0x2b, 0x68, 0xfc, 0xcd, 0x83, 0x9e,
	0xe6, 0xff, 0xbc, 0xbf, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x59, 0x81, 0x6b, 0x48, 0x1b, 0x0e,
	0x00, 0x00,
}
